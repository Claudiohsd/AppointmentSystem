/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mustachebarbers;

import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author claudiodionisio
 * student number:2019235
 */
public class SetAvailability extends JFrame {

    ArrayList<String> data1 = new ArrayList<String>();
    private JComboBox<String> jComboBox1 = new JComboBox();
    private JComboBox<String> jComboBox2 = new JComboBox();
    private JComboBox<String> jComboBox3 = new JComboBox();
    private JComboBox<String> jComboBox4 = new JComboBox();
    private JPanel mainPanel = new JPanel();
    private JPanel panel2 = new JPanel();
    private JPanel panel3 = new JPanel();
    private JPanel panel4 = new JPanel();
    private JPanel panel5 = new JPanel();
    private JPanel panel6 = new JPanel();
    private JPanel panel7 = new JPanel();
    private JLabel textTf1 = new JLabel();
    private JLabel textTf2 = new JLabel();
    private JLabel textTf3 = new JLabel();
    private JLabel textTf4 = new JLabel();
    private JLabel textTf5 = new JLabel();
    private JLabel textTf6 = new JLabel();
    private JLabel textTf7 = new JLabel();
    private JButton no = new JButton("No");
    private JButton yes = new JButton("Yes");
    private JButton back = new JButton("Back");
    private JButton logout = new JButton("Logout");
    private String selected, title, dateTime, time, day, month, year;
    GridLayout gLayout = new GridLayout(7, 1);
    Controller controller;
    Model model;

    public SetAvailability(Controller controller) {
        this.controller = controller;
        // sets the default title to start page which will be the first page to run
        this.title = "Set Availability";
        this.model = new Model();
        //set the text on to the panels
        textTf1.setText("       Select a year, a month, a day and a time");
        textTf2.setText("Year");
        textTf3.setText("Month");
        textTf4.setText("Day");
        textTf5.setText("Time");
        textTf6.setText("            Is this slot available?              ");
        //listeners
        jComboBox1.addItemListener(listener);
        jComboBox2.addItemListener(listener);
        jComboBox3.addItemListener(listener);
        jComboBox4.addItemListener(listener);
        jComboBox1.setModel(new DefaultComboBoxModel<>((year())));

        // We encapsulated the building process of the window
        setAttributes();
        components();
        // listeners
        no.addActionListener(controller);
        yes.addActionListener(controller);
        logout.addActionListener(controller);
        back.setActionCommand("SetAvailability Back");
        back.addActionListener(controller);
        logout.setActionCommand("SetAvailability Logout");
        //adds the elements to the panel
        mainPanel.add(textTf1);
        mainPanel.add(textTf2);
        mainPanel.add(jComboBox1);
        panel2.add(textTf3);
        panel2.add(jComboBox2);
        panel3.add(textTf4);
        panel3.add(jComboBox3);
        panel4.add(textTf5);
        panel4.add(jComboBox4);
        panel5.add(textTf6);
        panel5.add(yes);
        panel5.add(no);
        panel6.add(textTf7);
        panel7.add(back);
        panel7.add(logout);

        validation();
    }

    //defines what will appear in the jcombo box year
    private String[] year() {

        ArrayList<String> data1 = new ArrayList<String>();
        data1.add("---select---");
        data1.add("2020");
        data1.add("2021");
        data1.add("2022");

        int size = data1.size();
        String[] data = data1.toArray(new String[size]);
        return data;
    }

    // combo box month
    private String[] month() {

        ArrayList<String> data1 = new ArrayList<String>();
        data1.add("---select---");
        //loop to generate the values for the months of the year
        //if the number generated by the loop is smaller than 10, it adds a zero before in order to make them all have two digits
        for (int i = 0; i < 12; i++) {
            if (i < 9) {
                data1.add("0" + String.valueOf(i + 1));
            } else {
                data1.add(String.valueOf(i + 1));

            }
        }

        int size = data1.size();
        String[] data = data1.toArray(new String[size]);
        return data;
    }

    //combo box day
    private String[] day(String selected) {

        ArrayList<String> data1 = new ArrayList<String>();
        data1.add("---select---");
        //generates the values to populate the combo box days, with the days of the month
        //as not all the months have the same number of days, the if statement will define the number of days to be shown to the user

        //loop for february
        if (selected.matches("02")) {
            for (int i = 0; i < 29; i++) {
                //adds a zero before the one digited numbers
                if (i < 9) {
                    data1.add("0" + String.valueOf(i + 1));
                } else {
                    data1.add(String.valueOf(i + 1));
                }
            }
            //loop for the months with 31 days
        } else if (selected.matches("01") || selected.matches("03") || selected.matches("05") || selected.matches("07") || selected.matches("08") || selected.matches("10") || selected.matches("12")) {
            for (int i = 0; i < 31; i++) {
                if (i < 9) {
                    data1.add("0" + String.valueOf(i + 1));
                } else {
                    data1.add(String.valueOf(i + 1));
                }
            }
            //loop for all the other months with 30 days
        } else {
            for (int i = 0; i < 30; i++) {
                if (i < 9) {
                    data1.add("0" + String.valueOf(i + 1));
                } else {
                    data1.add(String.valueOf(i + 1));
                }
            }

        }

        int size = data1.size();
        String[] data = data1.toArray(new String[size]);
        return data;
    }

    //combo box time
    private String[] time() {

        ArrayList<String> data1 = new ArrayList<String>();
        data1.add("---select---");
        //loop to generate the combobox with the times of the day
        //starts at 8 to represent the time of the first appointment
        for (int i = 8; i < 20; i++) {
            if (i < 9) {
                data1.add("0" + String.valueOf(i + 1));
            } else {
                data1.add(String.valueOf(i + 1));
            }
        }

        int size = data1.size();
        String[] data = data1.toArray(new String[size]);
        return data;
    }

    //populates the combo boxes after one item is selected from the previous one
    public void populateJCB2() {

        jComboBox2.setModel(new DefaultComboBoxModel<>(month()));

    }

    public void populateJCB3() {

        jComboBox3.setModel(new DefaultComboBoxModel<>(day(selected)));

    }

    public void populateJCB4() {

        jComboBox4.setModel(new DefaultComboBoxModel<>(time()));

    }

    // Setting the attributes
    private void setAttributes() {
        //sets the size of the frame
        this.setSize(300, 400);
        //sets title of the frame
        this.setTitle(title);
        //makes the frame be openned in the center of the screen
        this.setLocationRelativeTo(null);
        this.logout.setBorderPainted(false);
        this.back.setBorderPainted(false);
        this.logout.setFocusable(false);
        this.back.setFocusable(false);
        this.setLayout(gLayout);
        this.setResizable(false);
        this.setVisible(true);
        this.panel5.setVisible(false);
        this.panel6.setVisible(false);

    }
    // Organising the components

    private void components() {

        this.add(mainPanel);
        this.add(mainPanel, BorderLayout.PAGE_START);
        this.add(panel2);
        this.add(panel2, BorderLayout.CENTER);
        this.add(panel3);
        this.add(panel3, BorderLayout.CENTER);
        this.add(panel4);
        this.add(panel4, BorderLayout.CENTER);
        this.add(panel6);
        this.add(panel6, BorderLayout.CENTER);
        this.add(panel5);
        this.add(panel5, BorderLayout.CENTER);
        this.add(panel7);
        this.add(panel7, BorderLayout.PAGE_END);

    }
    // Validation and repainting

    private void validation() {
        this.validate();
        this.repaint();
        //makes sure the jframe quits when closing window
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    public String getdateTime() {

        return this.dateTime;
    }
    //this will make sure all the combo box are selected and only show a button to change an appointment after all the boxes are selected
    //will also redirect to the methods that will populate the boxes
    ItemListener listener = (e) -> {
        if (e.getStateChange() == ItemEvent.SELECTED) {
            if (e.getSource() == jComboBox1) {
                if (jComboBox1.getSelectedIndex() != 0) {
                    selected = jComboBox1.getSelectedItem().toString();
                    year = selected;
                    jComboBox2.removeAllItems();
                    populateJCB2();

                }
            } else if (e.getSource() == jComboBox2) {
                if (jComboBox2.getSelectedIndex() != 0) {
                    selected = jComboBox2.getSelectedItem().toString();
                    month = selected;
                    jComboBox3.removeAllItems();
                    populateJCB3();
                }
            } else if (e.getSource() == jComboBox3) {
                if (jComboBox2.getSelectedIndex() != 0) {
                    selected = jComboBox2.getSelectedItem().toString();
                    day = selected;
                    jComboBox4.removeAllItems();
                    populateJCB4();
                    this.textTf6.setVisible(true);

                }

            } else if (e.getSource() == jComboBox4) {
                if (jComboBox4.getSelectedIndex() != 0) {
                    selected = jComboBox4.getSelectedItem().toString();
                    time = selected + ":00";
                    // concatenates the strings creating a single one to be displayed to the user and to be used inthe model 
                    this.dateTime = day + "-" + month + "-" + year + " " + time;
                    this.textTf7.setText(dateTime);
                    this.panel5.setVisible(true);
                    this.panel6.setVisible(true);

                }

            }
        }

    };
}
